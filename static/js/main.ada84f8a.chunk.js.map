{"version":3,"sources":["components/ToDoForm.js","components/ToDo.js","components/ToDoList.js","App.js","index.js"],"names":["ToDoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","value","className","onSubmit","preventDefault","id","Math","floor","random","text","edit","type","placeholder","onChange","ref","ToDo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","key","onClick","ToDoList","setTodos","test","newTodos","updateTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOA0DeA,MAxDf,SAAkBC,GAAQ,IAAD,EACIC,mBAAS,IADb,mBACdC,EADc,KACRC,EADQ,KAGfC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAAMC,EAAe,SAACC,GAClBP,EAASO,EAAEC,OAAOC,QAWtB,OACI,0BAAMC,UAAU,YAAYC,SAVX,SAACJ,GAClBA,EAAEK,iBACFf,EAAMc,SAAS,CACfE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMlB,IAENC,EAAS,MAKJH,EAAMqB,KACH,oCACA,2BACJC,KAAK,OACLC,YAAY,mBACZV,UAAU,kBACVW,SAAUf,EACVG,MAAOV,EACPuB,IAAKrB,IAGL,4BAAQS,UAAU,oBAAlB,WAGI,oCACA,2BACJS,KAAK,OACLC,YAAY,aACZV,UAAU,aACVW,SAAUf,EACVG,MAAOV,EACPuB,IAAKrB,IAGL,4BAAQS,UAAU,eAAlB,e,cCJGa,MAxCf,YAA6D,IAA9CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,aAAaC,EAAyB,EAAzBA,WAAWC,EAAc,EAAdA,WAAc,EAEhC7B,mBAAS,CAC7Be,GAAI,KACJJ,MAAO,KAJ6C,mBAEjDS,EAFiD,KAE3CU,EAF2C,KAgBxD,OAAGV,EAAKL,GACG,kBAAC,EAAD,CAAUK,KAAMA,EAAMP,SAVZ,SAACF,GAClBkB,EAAWT,EAAKL,GAAIJ,GAEpBmB,EAAQ,CACJf,GAAI,KACJJ,MAAO,QAORe,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACb,yBACArB,UAAWoB,EAAKE,WAAa,oBAAsB,WACnDC,IAAKF,GACD,yBAAKrB,UAAU,YAAYuB,IAAKH,EAAKjB,GAAIqB,QAAS,kBAAMT,EAAaK,EAAKjB,MACrEiB,EAAKb,MAEV,yBAAKP,UAAU,SACX,kBAAC,IAAD,CACAwB,QAAS,kBAAMR,EAAWI,EAAKjB,KAC3BH,UAAU,gBAEd,kBAAC,IAAD,CACIwB,QAAS,kBAAMN,EAAQ,CAACf,GAAIiB,EAAKjB,GAAIJ,MAAOqB,EAAKb,QACjDP,UAAU,oBCgBfyB,MAnDf,WAAqB,IAAD,EACWrC,mBAAS,IADpB,mBACT0B,EADS,KACFY,EADE,KAqChB,OACI,6BACI,0DACA,kBAAC,EAAD,CAAUzB,SArCF,SAACmB,GACb,GAAIA,EAAKb,OAAQ,QAAQoB,KAAKP,EAAKb,MAAnC,CAIA,IAAMqB,EAAQ,CAAIR,GAAJ,mBAAaN,IAC3BY,EAASE,OAgCL,kBAAC,EAAD,CACId,MAAOA,EACPC,aAjBS,SAACZ,GAClB,IAAI0B,EAAcf,EAAMK,KAAI,SAACC,GAKzB,OAJGA,EAAKjB,KAAOA,IACXiB,EAAKE,YAAcF,EAAKE,YAGrBF,KAGXM,EAASG,IASDb,WAvBO,SAAAb,GACf,IAAM2B,EAAY,YAAIhB,GAAOiB,QAAO,SAACX,GAAD,OAAUA,EAAKjB,KAAMA,KAEzDuB,EAASI,IAqBDb,WA/BM,SAACe,EAAQC,GACnBA,EAAS1B,OAAQ,QAAQoB,KAAKM,EAAS1B,OAG3CmB,GAAS,SAACQ,GAAD,OAAUA,EAAKf,KAAI,SAACgB,GAAD,OAAWA,EAAKhC,KAAM6B,EAASC,EAAUE,a,MCN9DC,MAVf,WACE,OACE,oCACE,yBAAKpC,UAAU,YACb,kBAAC,EAAD,SCJRqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ada84f8a.chunk.js","sourcesContent":["import React,{useState, useEffect, useRef} from 'react'\r\n\r\nfunction ToDoForm(props) {\r\n    const [input,setInput] = useState(\"\");\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const handleChange = (e)=> {\r\n        setInput(e.target.value)\r\n    };\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        props.onSubmit({\r\n        id: Math.floor(Math.random() * 10000),\r\n        text: input\r\n         })\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"todo_form\" onSubmit={handleSubmit}>\r\n            {props.edit ? (\r\n                <>\r\n                <input \r\n            type=\"text\" \r\n            placeholder=\"Update your item\" \r\n            className=\"todo_input edit\"\r\n            onChange={handleChange}\r\n            value={input}\r\n            ref={inputRef}\r\n            >         \r\n            </input>\r\n            <button className=\"todo_button edit\">Update</button>\r\n            </>\r\n            ) : (\r\n                <>\r\n                <input \r\n            type=\"text\" \r\n            placeholder=\"Add a todo\" \r\n            className=\"todo_input\"\r\n            onChange={handleChange}\r\n            value={input}\r\n            ref={inputRef}\r\n            >         \r\n            </input>\r\n            <button className=\"todo_button\">Add todo</button>\r\n            </>\r\n            )}\r\n            \r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ToDoForm\r\n","import React, {useState} from 'react'\r\nimport ToDoForm from './ToDoForm'\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport {TiEdit} from 'react-icons/ti'\r\n\r\nfunction ToDo({todos, completeTodo,removeTodo,updateTodo }) {\r\n\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    })\r\n\r\n    const submitUpdate = (value) => {\r\n        updateTodo(edit.id, value)\r\n\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if(edit.id){\r\n        return <ToDoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n    return todos.map((todo, index) => (\r\n        <div \r\n        className={todo.isComplete ? 'todo_row complete' : 'todo_row'}\r\n        key={index}>\r\n            <div className=\"todo_text\" key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine \r\n                onClick={() => removeTodo(todo.id)}\r\n                    className=\"delete_icon\"\r\n                />\r\n                <TiEdit \r\n                    onClick={() => setEdit({id: todo.id, value: todo.text})}\r\n                    className=\"edit_icon\"\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n}\r\n\r\nexport default ToDo\r\n","import React,{useState} from 'react'\r\nimport ToDo from './ToDo';\r\nimport ToDoForm from './ToDoForm'\r\nfunction ToDoList() {\r\n    const [todos, setTodos ] = useState([]);\r\n\r\n    const addTodo = (todo) => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)){\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos);\r\n        \r\n    }\r\n\r\n\r\n    const updateTodo =(todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)){\r\n            return;\r\n        }\r\n        setTodos((prev) => prev.map((item) => (item.id ===todoId ? newValue: item)))\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter((todo) => todo.id !==id);\r\n\r\n        setTodos(removeArr)\r\n    }\r\n    const completeTodo = (id) => {\r\n        let updateTodos = todos.map((todo) => {\r\n            if(todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n\r\n            return todo;\r\n        });\r\n\r\n        setTodos(updateTodos);\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>What's the plan for Today?</h1>\r\n            <ToDoForm onSubmit={addTodo}/>\r\n            <ToDo\r\n                todos={todos} \r\n                completeTodo={completeTodo}\r\n                removeTodo = {removeTodo}\r\n                updateTodo={updateTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList\r\n","import React from 'react'\nimport ToDoList from './components/ToDoList'\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <>\n      <div className=\"todo_app\">\n        <ToDoList/>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}